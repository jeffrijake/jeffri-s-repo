# vpc #

# main.tf# ##

resource "aws_vpc" "main" {

	  cidr_block = var.vpc_cidr
	  enable_dns_support = true
	  enable_dns_hostnames = true
	
	  tags = {
	    Name = var.vpc_name
	  }
	}

## variables.tf ##
variable "vpc_cidr" {

	  description = "The CIDR block for the VPC"
	}

variable "vpc_name" {

	  description = "The name of the VPC"
	}

# outputs.tf #

output "vpc_id" {

	  value = aws_vpc.main.id
	}

-----------------------------------
# EC2 #

## main.tf ##

resource "aws_instance" "example" {

	  ami           = var.ami_id
	  instance_type = var.instance_type
	  subnet_id     = var.subnet_id

	  tags = {
	    Name = var.instance_name
	  }
	}

## variables.tf ##

variable "ami_id" {

	  description = "The AMI ID for the EC2 instance"
	}

variable "instance_type" {

	  description = "The type of EC2 instance"
	}

variable "subnet_id" {

	  description = "The ID of the subnet in which the EC2 instance will be launched"
	}

variable "instance_name" {

	  description = "The name of the EC2 instance"
	}


## outputs.tf ##

output "instance_id" {

	  value = aws_instance.example.id
	}
## integrating vpc n ec2 ##

module "vpc" {

	  source   = "./modules/vpc_with_ec2/vpc"
	  vpc_cidr = "10.0.0.0/16"
	  vpc_name = "my-vpc"
	}

module "ec2" {

	  source         = "./modules/vpc_with_ec2/ec2"
	  ami_id         = "ami-0440d3b780d96b29d"  # Update with your desired AMI ID
	  instance_type  = "t2.micro"
	  subnet_id      = module.vpc.vpc_id  # Referencing VPC module output
	  instance_name  = "test_instance"
	}


